{"version":3,"sources":["themes/openrpcTheme.ts","containers/JSONRPCRequest.tsx","containers/Inspector.tsx","hooks/useQueryParams.ts","containers/App.tsx","index.tsx"],"names":["lightTheme","createMuiTheme","props","MuiAppBar","position","MuiCard","elevation","overrides","root","background","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","JSONRPCRequest","darkMode","useDarkMode","monaco","init","then","m","modelUri","Uri","parse","concat","Math","random","schema","properties","jsonrpc","enum","id","oneOf","method","params","openrpcMethodObject","Object","objectSpread","additionalProperties","name","items","map","param","languages","json","jsonDefaults","setDiagnosticsOptions","enableSchemaRequest","schemas","fileMatch","uri","toString","validate","window","addEventListener","editor","layout","catch","error","console","react_default","a","createElement","Fragment","lib","theme","value","language","onChange","ev","Inspector","_useCounter","defaultValue","_useState5","useState","_useState6","slicedToArray","counter","setCounter","useCounter","_useCounter2","incrementId","_useState7","request","_useState8","setJson","editorRef","useRef","_useState9","_useState10","results","setResults","_useState11","url","_useState12","setUrl","_useClient","_useState","_useState2","client","setClient","_useState3","_useState4","setError","useEffect","transport","includes","HTTPTransport","WebSocketTransport","t","c","Client","RequestManager","onError","e","log","useClient","_useClient2","handlePlayButton","_ref","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","clear","sent","t0","stop","apply","this","arguments","undefined","style","height","AppBar","Toolbar","alt","marginRight","src","Typography","variant","IconButton","onClick","PlayCircleFilled_default","InputBase","placeholder","event","target","fullWidth","borderRadius","padding","hideToggleTheme","onToggleDarkMode","Brightness3_default","WbSunny_default","display","marginBottom","index_esm","split","minSize","maxSize","defaultSize","flexGrow","current","width","containers_JSONRPCRequest","val","JSON","stringify","overflowY","paddingBottom","Button","top","right","zIndex","lib_default","options","minimap","enabled","wordWrap","lineNumbers","wrappingIndent","readOnly","showFoldingControls","editorDidMount","_","useQueryParams","depth","qs","location","search","ignoreQueryPrefix","decoder","str","decodeURIComponent","App","_useQueryParams","query","MuiThemeProvider","CssBaseline","containers_Inspector","toggle","ReactDOM","render","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.194f2181.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[800],\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import React from \"react\";\nimport useDarkMode from \"use-dark-mode\";\nimport { monaco, ControlledEditor, Monaco } from \"@monaco-editor/react\";\nimport { MethodObject } from \"@open-rpc/meta-schema\";\n\ninterface IProps {\n  onChange?: (newValue: any) => void;\n  openrpcMethodObject?: MethodObject;\n  value: any;\n}\n\nconst JSONRPCRequest: React.FC<IProps> = (props) => {\n  const darkMode = useDarkMode();\n  monaco\n    .init()\n    .then((m: Monaco) => {\n      const modelUri = m.Uri.parse(`inmemory:/${Math.random()}/model/userSpec.json`);\n      let schema: any = {\n        type: \"object\",\n        properties: {\n          jsonrpc: {\n            type: \"string\",\n            enum: [\"2.0\"],\n          },\n          id: {\n            oneOf: [\n              {\n                type: \"string\",\n              },\n              {\n                type: \"number\",\n              },\n            ],\n          },\n          method: {\n            type: \"string\",\n          },\n          params: {\n            type: \"array\",\n          },\n        },\n      };\n      if (props.openrpcMethodObject) {\n        schema = {\n          ...schema,\n          additionalProperties: false,\n          properties: {\n            ...schema.properties,\n            method: {\n              type: \"string\",\n              enum: [props.openrpcMethodObject.name],\n            },\n            params: {\n              ...schema.properties.params,\n              items: props.openrpcMethodObject.params.map((param: any) => {\n                return {\n                  ...param.schema,\n                  additionalProperties: false,\n                };\n              }),\n            },\n          },\n        };\n      }\n      m.languages.json.jsonDefaults.setDiagnosticsOptions({\n        enableSchemaRequest: true,\n        schemas: [\n          {\n            fileMatch: [\"*\"],\n            schema,\n            uri: modelUri.toString(),\n          },\n        ],\n        validate: true,\n      });\n      window.addEventListener(\"resize\", m.editor.layout());\n    })\n    .catch((error: Error) => console.error(\"An error occurred during initialization of Monaco: \", error));\n\n  const handleChange = (ev: any, value: any) => {\n    if (props.onChange) {\n      props.onChange(value);\n    }\n  };\n\n  return (\n    <>\n      <ControlledEditor\n        theme={darkMode.value ? \"dark\" : \"light\"}\n        value={props.value}\n        language=\"json\"\n        onChange={handleChange}\n      />\n    </>\n  );\n};\n\nexport default JSONRPCRequest;\n","import React, { useState, useEffect, ChangeEvent, Dispatch, useRef } from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport JSONRPCRequest from \"./JSONRPCRequest\";\nimport PlayCircle from \"@material-ui/icons/PlayCircleFilled\";\nimport { IconButton, AppBar, Toolbar, Typography, Button, InputBase } from \"@material-ui/core\";\nimport { Client, RequestManager, HTTPTransport, WebSocketTransport } from \"@open-rpc/client-js\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport { JSONRPCError } from \"@open-rpc/client-js/build/Error\";\nimport useDarkMode from \"use-dark-mode\";\nimport Editor from \"@monaco-editor/react\";\nimport { MethodObject } from \"@open-rpc/meta-schema\";\n\ninterface IProps {\n  url?: string;\n  request?: any;\n  darkMode?: boolean;\n  hideToggleTheme?: boolean;\n  openrpcMethodObject?: MethodObject;\n  onToggleDarkMode?: () => void;\n}\n\nconst useClient = (url: string): [Client, JSONRPCError | undefined, Dispatch<JSONRPCError | undefined>] => {\n  const [client, setClient] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    let transport;\n    if (url.includes(\"http://\") || url.includes(\"https://\")) {\n      transport = HTTPTransport;\n    }\n    if (url.includes(\"ws://\")) {\n      transport = WebSocketTransport;\n    }\n    try {\n      const clientTransport = transport || HTTPTransport;\n      const t = new clientTransport(url);\n      const c = new Client(new RequestManager([t]));\n      setClient(c);\n      c.onError((e) => {\n        console.log(\"onError\", e); //tslint:disable-line\n        setError(e);\n      });\n    } catch (e) {\n      setError(e);\n    }\n  }, [url]);\n  return [client, error, setError];\n};\n\nfunction useCounter(defaultValue: number): [number, () => void] {\n  const [counter, setCounter] = useState(defaultValue);\n\n  const incrementCounter = () => {\n    setCounter(counter + 1);\n  };\n\n  return [counter, incrementCounter];\n}\n\nconst Inspector: React.FC<IProps> = (props) => {\n  const darkMode = useDarkMode();\n  const [id, incrementId] = useCounter(0);\n  const [json, setJson] = useState(props.request || {\n    jsonrpc: \"2.0\",\n    method: \"\",\n    params: [],\n    id,\n  });\n  const editorRef = useRef();\n  const [results, setResults] = useState();\n  const [url, setUrl] = useState(props.url || \"\");\n  const [client, error, setError] = useClient(url);\n  useEffect(() => {\n    if (props.openrpcMethodObject) {\n      setJson({\n        jsonrpc: \"2.0\",\n        method: props.openrpcMethodObject.name,\n        params: json.params,\n        id,\n      });\n    }\n  }, [props.openrpcMethodObject, json, setJson, id]);\n\n  useEffect(() => {\n    if (props.url) {\n      setUrl(props.url);\n    }\n  }, [props.url]);\n\n  const handlePlayButton = async () => {\n    clear();\n    if (client) {\n      incrementId();\n      try {\n        const result = await client.request(json.method, json.params);\n        setResults({ jsonrpc: \"2.0\", result });\n      } catch (e) {\n        setError(e);\n      }\n    }\n  };\n  function handleResponseEditorDidMount(_: any, editor: any) {\n    editorRef.current = editor;\n  }\n\n  const clear = () => {\n    setResults(undefined);\n    setError(undefined);\n  };\n\n  const handleClearButton = () => {\n    clear();\n  };\n\n  const handleToggleDarkMode = () => {\n    if (props.onToggleDarkMode) {\n      props.onToggleDarkMode();\n    }\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <AppBar position=\"static\" elevation={0} color=\"default\">\n        <Toolbar>\n          <img\n            height=\"30\"\n            alt=\"openrpc-logo\"\n            style={{ marginRight: \"10px\" }}\n            src=\"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\" //tslint:disable-line\n          />\n          <Typography variant=\"h6\" color=\"textSecondary\">Inspector</Typography>\n          <IconButton onClick={handlePlayButton}>\n            <PlayCircle />\n          </IconButton>\n          <InputBase\n            value={url}\n            placeholder=\"Enter a JSON-RPC server URL\"\n            onChange={\n              (event: ChangeEvent<HTMLInputElement>) => setUrl(event.target.value)\n            }\n            fullWidth\n            style={{ background: \"rgba(0,0,0,0.1)\", borderRadius: \"4px\", padding: \"0px 10px\", marginRight: \"5px\" }}\n          />\n          {\n            props.hideToggleTheme\n              ? null\n              : <IconButton onClick={handleToggleDarkMode}>\n                {props.darkMode ? <Brightness3Icon /> : <WbSunnyIcon />}\n              </IconButton>\n          }\n        </Toolbar>\n      </AppBar>\n      <div style={{ display: \"flex\", marginBottom: \"-80px\" }}>\n        <SplitPane\n          split=\"vertical\"\n          minSize={100}\n          maxSize={-100}\n          defaultSize={\"50%\"}\n          style={{ flexGrow: 1 }}\n          onChange={() => {\n            if (editorRef && editorRef.current) {\n              (editorRef.current as any).layout();\n            }\n          }}>\n          <div style={{ width: \"99%\", padding: \"10px\" }}>\n            <JSONRPCRequest\n              onChange={(val) => setJson(JSON.parse(val))}\n              openrpcMethodObject={props.openrpcMethodObject}\n              value={JSON.stringify(json, null, 4)}\n            />\n          </div>\n          <div style={{ height: \"100%\", padding: \"10px\", overflowY: \"auto\", paddingBottom: \"80px\" }}>\n            {(results || error) &&\n              <Button\n                style={{ position: \"absolute\", top: \"15px\", right: \"15px\", zIndex: 1 }}\n                onClick={handleClearButton}>\n                Clear\n                </Button>\n            }\n            <Editor\n              options={{\n                minimap: {\n                  enabled: false,\n                },\n                wordWrap: \"on\",\n                lineNumbers: \"off\",\n                wrappingIndent: \"deepIndent\",\n                readOnly: true,\n                showFoldingControls: \"always\",\n              }}\n              editorDidMount={handleResponseEditorDidMount}\n              theme={darkMode.value ? \"dark\" : \"light\"}\n              language=\"json\"\n              value={JSON.stringify(error || results, null, 4) || \"\"}\n            />\n          </div>\n        </SplitPane >\n      </div>\n    </div>\n  );\n};\n\nexport default Inspector;\n","import { useState } from \"react\";\nimport * as qs from \"qs\";\n\nconst useQueryParams = (depth?: number) => {\n  const parse = () => {\n    return qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n      depth: depth || 100,\n      decoder(str) {\n        if (str === \"false\") {\n          return false;\n        }\n        if (str === \"true\") {\n          return true;\n        }\n        return decodeURIComponent(str);\n      },\n    });\n  };\n  const [query] = useState(parse());\n  return [query];\n};\n\nexport default useQueryParams;\n","import React from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { lightTheme, darkTheme } from \"../themes/openrpcTheme\";\nimport useDarkMode from \"use-dark-mode\";\nimport Inspector from \"./Inspector\";\nimport useQueryParams from \"../hooks/useQueryParams\";\n\nconst App: React.FC = () => {\n  const darkMode = useDarkMode();\n  const [query] = useQueryParams();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Inspector\n        onToggleDarkMode={darkMode.toggle}\n        darkMode={darkMode.value}\n        url={query.url}\n        openrpcMethodObject={query.openrpcMethodObject}\n        request={query.request}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./containers/App\";\nimport \"./App.css\";\nimport \"./splitpane.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}