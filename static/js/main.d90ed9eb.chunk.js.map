{"version":3,"sources":["containers/JSONRPCRequest.tsx","themes/openrpcTheme.ts","containers/Inspector.tsx","index.tsx"],"names":["JSONRPCRequest","props","_useState","useState","collapseStringsAfterLength","displayDataTypes","displayObjectSize","indentWidth","name","reactJsonOptions","Object","slicedToArray","handleChange","changed","onChange","updated_src","react_default","a","createElement","Fragment","main_default","assign","theme","reactJsonTheme","src","json","onEdit","onAdd","onDelete","lightTheme","createMuiTheme","MuiAppBar","position","MuiCard","elevation","overrides","root","background","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","Inspector","darkMode","useDarkMode","value","_useCounter","defaultValue","_useState3","_useState4","counter","setCounter","useCounter","_useCounter2","id","incrementId","_useState5","request","jsonrpc","method","params","_useState6","setJson","_useState7","_useState8","results","setResults","_useState9","url","_useState10","setUrl","_useClient","_useState2","client","setClient","useEffect","transport","includes","HTTPTransport","WebSocketTransport","console","error","concat","t","c","Client","RequestManager","e","useClient","handlePlayButton","_ref","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","sent","t0","stop","apply","this","arguments","MuiThemeProvider","CssBaseline","style","height","AppBar","Toolbar","alt","marginRight","Typography","variant","IconButton","onClick","PlayCircleFilled_default","InputBase","placeholder","event","target","fullWidth","borderRadius","padding","toggle","Brightness3_default","WbSunny_default","display","marginBottom","index_esm","split","minSize","maxSize","defaultSize","flexGrow","width","containers_JSONRPCRequest","objectSpread","toString","overflowY","paddingBottom","Button","top","right","zIndex","undefined","ReactDOM","render","containers_Inspector","document","getElementById"],"mappings":"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","file":"static/js/main.d90ed9eb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactJson from \"react-json-view\";\n\ninterface IProps {\n  json?: any;\n  reactJsonTheme: string;\n  onChange?: (newValue: any) => void;\n}\n\nconst JSONRPCRequest: React.FC<IProps> = (props) => {\n  const [reactJsonOptions] = useState({\n    collapseStringsAfterLength: 25,\n    displayDataTypes: false,\n    displayObjectSize: false,\n    indentWidth: 2,\n    name: false,\n  });\n\n  const handleChange = (changed: any) => {\n    if (props.onChange) {\n      props.onChange(changed.updated_src);\n    }\n  };\n\n  return (\n    <>\n      <ReactJson\n        theme={props.reactJsonTheme}\n        src={props.json}\n        {...reactJsonOptions as any}\n        onEdit={handleChange}\n        onAdd={handleChange}\n        onDelete={handleChange}\n      />\n    </>\n  );\n};\n\nexport default JSONRPCRequest;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[800],\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import React, { useState, useEffect, ChangeEvent } from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport JSONRPCRequest from \"./JSONRPCRequest\";\nimport PlayCircle from \"@material-ui/icons/PlayCircleFilled\";\nimport { IconButton, AppBar, Toolbar, Typography, Button, InputBase, CssBaseline } from \"@material-ui/core\";\nimport { Client, RequestManager, HTTPTransport, WebSocketTransport } from \"@open-rpc/client-js\";\nimport ReactJson from \"react-json-view\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { lightTheme, darkTheme } from \"../themes/openrpcTheme\";\nimport useDarkMode from \"use-dark-mode\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\n\ninterface IProps {\n  url?: string;\n  request?: any;\n  darkMode?: boolean;\n}\n\nconst useClient = (url: string): [Client] => {\n  const [client, setClient] = useState();\n  useEffect(() => {\n    let transport;\n    if (url.includes(\"http://\") || url.includes(\"https://\")) {\n      transport = HTTPTransport;\n    }\n    if (url.includes(\"ws://\")) {\n      transport = WebSocketTransport;\n    }\n    if (!transport) {\n      return console.error(`No Transport Found for url: ${url}`);\n    }\n    try {\n      const t = new transport(url);\n      const c = new Client(new RequestManager([t]));\n      setClient(c);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [url]);\n  return [client];\n}\n\nfunction useCounter(defaultValue: number): [number, () => void] {\n  const [counter, setCounter] = useState(defaultValue);\n\n  const incrementCounter = () => {\n    setCounter(counter + 1);\n  };\n\n  return [counter, incrementCounter];\n}\n\nconst Inspector: React.FC<IProps> = (props) => {\n  const darkMode = useDarkMode();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n  const reactJsonTheme = darkMode.value ? \"summerfruit\" : \"summerfruit:inverted\";\n\n  const [id, incrementId] = useCounter(0);\n  const [json, setJson] = useState(props.request || {\n    jsonrpc: \"2.0\",\n    method: \"\",\n    params: [],\n    id,\n  });\n  const [results, setResults] = useState();\n  const [url, setUrl] = useState(props.url || \"\");\n  const [client] = useClient(url);\n\n  const handlePlayButton = async () => {\n    if (client) {\n      incrementId();\n      try {\n        const result = await client.request(json.method, json.params);\n        setResults({ jsonrpc: \"2.0\", result });\n      } catch (e) {\n        setResults(e);\n      }\n    }\n  };\n\n  const handleClearButton = () => {\n    setResults(undefined);\n  };\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <div style={{ height: \"100%\" }}>\n        <AppBar position=\"static\" elevation={0}>\n          <Toolbar>\n            <img\n              height=\"30\"\n              alt=\"openrpc-logo\"\n              style={{ marginRight: \"10px\" }}\n              src=\"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\" //tslint:disable-line\n            />\n            <Typography variant=\"h6\" color=\"textSecondary\">Inspector</Typography>\n            <IconButton onClick={handlePlayButton}>\n              <PlayCircle />\n            </IconButton>\n            <InputBase\n              value={url}\n              placeholder=\"Enter a JSON-RPC server URL\"\n              onChange={\n                (event: ChangeEvent<HTMLInputElement>) => setUrl(event.target.value)\n              }\n              fullWidth\n              style={{ background: \"rgba(0,0,0,0.1)\", borderRadius: \"4px\", padding: \"0px 10px\", marginRight: \"5px\" }}\n            />\n            <IconButton onClick={darkMode.toggle}>\n              {darkMode.value ? <Brightness3Icon /> : <WbSunnyIcon />}\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <div style={{ display: \"flex\", marginBottom: \"-80px\" }}>\n          <SplitPane split=\"vertical\" minSize={100} maxSize={-100} defaultSize={\"35%\"} style={{ flexGrow: 1 }}>\n            <div style={{ width: \"99%\", padding: \"10px\" }}>\n              <JSONRPCRequest\n                json={{ ...json, id: id.toString() }}\n                onChange={setJson}\n                reactJsonTheme={reactJsonTheme}\n              />\n            </div>\n            <div style={{ height: \"100%\", padding: \"10px\", overflowY: \"auto\", paddingBottom: \"80px\" }}>\n              {results &&\n                <Button\n                  style={{ position: \"absolute\", top: \"15px\", right: \"15px\", zIndex: 1 }}\n                  onClick={handleClearButton}>\n                  Clear\n                </Button>\n              }\n              {results &&\n                <ReactJson\n                  src={results ? {...results, id: (id - 1).toString()} : null}\n                  name={false}\n                  displayDataTypes={false}\n                  displayObjectSize={false}\n                  theme={reactJsonTheme}\n                />}\n            </div>\n          </SplitPane >\n        </div>\n      </div>\n    </MuiThemeProvider>\n  );\n};\n\nexport default Inspector;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport Inspector from \"./containers/Inspector\";\nimport \"./App.css\";\nimport \"./splitpane.css\";\n\nReactDOM.render(<Inspector />, document.getElementById(\"root\"));\n"],"sourceRoot":""}