{"version":3,"sources":["themes/openrpcTheme.ts","containers/JSONRPCRequest.tsx","containers/Inspector.tsx","hooks/useQueryParams.ts","containers/App.tsx","index.tsx"],"names":["lightTheme","createMuiTheme","props","MuiAppBar","position","MuiCard","elevation","overrides","root","background","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","JSONRPCRequest","darkMode","useDarkMode","editorRef","useRef","windowSize","useWindowSize","useEffect","undefined","current","layout","react_default","a","createElement","Fragment","lib","theme","value","editorDidMount","_","editor","monaco","init","then","m","modelUri","Uri","parse","concat","Math","random","schema","properties","jsonrpc","enum","id","oneOf","method","params","openrpcMethodObject","Object","objectSpread","additionalProperties","name","items","map","param","languages","json","jsonDefaults","setDiagnosticsOptions","enableSchemaRequest","schemas","fileMatch","uri","toString","validate","catch","error","console","language","onChange","ev","Inspector","_useCounter","defaultValue","_useState5","useState","_useState6","slicedToArray","counter","setCounter","useCounter","_useCounter2","incrementId","_useState7","request","_useState8","setJson","_useState9","_useState10","results","setResults","_useState11","url","_useState12","setUrl","_useClient","_useState","_useState2","client","setClient","_useState3","_useState4","setError","transport","includes","HTTPTransport","WebSocketTransport","t","c","Client","RequestManager","onError","e","log","useClient","_useClient2","handlePlayButton","_ref","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","clear","sent","t0","stop","apply","this","arguments","style","height","AppBar","Toolbar","alt","marginRight","src","Typography","variant","IconButton","onClick","PlayCircleFilled_default","InputBase","placeholder","event","target","fullWidth","borderRadius","padding","hideToggleTheme","onToggleDarkMode","Brightness3_default","WbSunny_default","display","marginBottom","index_esm","split","minSize","maxSize","defaultSize","flexGrow","width","containers_JSONRPCRequest","val","JSON","stringify","overflowY","paddingBottom","Button","top","right","zIndex","lib_default","options","minimap","enabled","wordWrap","lineNumbers","wrappingIndent","readOnly","showFoldingControls","useQueryParams","depth","qs","window","location","search","ignoreQueryPrefix","decoder","str","decodeURIComponent","App","_useQueryParams","query","MuiThemeProvider","CssBaseline","containers_Inspector","toggle","ReactDOM","render","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.4d55d6f3.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[800],\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import React, { useRef, useEffect } from \"react\";\nimport useDarkMode from \"use-dark-mode\";\nimport { monaco, ControlledEditor, Monaco } from \"@monaco-editor/react\";\nimport { MethodObject } from \"@open-rpc/meta-schema\";\nimport useWindowSize from \"@rehooks/window-size\";\n\ninterface IProps {\n  onChange?: (newValue: any) => void;\n  openrpcMethodObject?: MethodObject;\n  value: any;\n}\n\nconst JSONRPCRequest: React.FC<IProps> = (props) => {\n  const darkMode = useDarkMode();\n  const editorRef = useRef();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (editorRef !== undefined && editorRef.current !== undefined) {\n      (editorRef.current as any).layout();\n    }\n  }, [windowSize]);\n\n  function handleEditorDidMount(_: any, editor: any) {\n    editorRef.current = editor;\n    // Now you can use the instance of monaco editor\n    // in this component whenever you want\n    monaco\n      .init()\n      .then((m: Monaco) => {\n        const modelUri = m.Uri.parse(`inmemory:/${Math.random()}/model/userSpec.json`);\n        let schema: any = {\n          type: \"object\",\n          properties: {\n            jsonrpc: {\n              type: \"string\",\n              enum: [\"2.0\"],\n            },\n            id: {\n              oneOf: [\n                {\n                  type: \"string\",\n                },\n                {\n                  type: \"number\",\n                },\n              ],\n            },\n            method: {\n              type: \"string\",\n            },\n            params: {\n              type: \"array\",\n            },\n          },\n        };\n        if (props.openrpcMethodObject) {\n          schema = {\n            ...schema,\n            additionalProperties: false,\n            properties: {\n              ...schema.properties,\n              method: {\n                type: \"string\",\n                enum: [props.openrpcMethodObject.name],\n              },\n              params: {\n                ...schema.properties.params,\n                items: props.openrpcMethodObject.params.map((param: any) => {\n                  return {\n                    ...param.schema,\n                    additionalProperties: false,\n                  };\n                }),\n              },\n            },\n          };\n        }\n        m.languages.json.jsonDefaults.setDiagnosticsOptions({\n          enableSchemaRequest: true,\n          schemas: [\n            {\n              fileMatch: [\"*\"],\n              schema,\n              uri: modelUri.toString(),\n            },\n          ],\n          validate: true,\n        });\n      })\n      .catch((error: Error) => console.error(\"An error occurred during initialization of Monaco: \", error));\n  }\n\n  const handleChange = (ev: any, value: any) => {\n    if (props.onChange) {\n      props.onChange(value);\n    }\n  };\n\n  return (\n    <>\n      <ControlledEditor\n        theme={darkMode.value ? \"dark\" : \"light\"}\n        value={props.value}\n        editorDidMount={handleEditorDidMount}\n        language=\"json\"\n        onChange={handleChange}\n      />\n    </>\n  );\n};\n\nexport default JSONRPCRequest;\n","import React, { useState, useEffect, ChangeEvent, Dispatch, useRef } from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport JSONRPCRequest from \"./JSONRPCRequest\";\nimport PlayCircle from \"@material-ui/icons/PlayCircleFilled\";\nimport { IconButton, AppBar, Toolbar, Typography, Button, InputBase } from \"@material-ui/core\";\nimport { Client, RequestManager, HTTPTransport, WebSocketTransport } from \"@open-rpc/client-js\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport { JSONRPCError } from \"@open-rpc/client-js/build/Error\";\nimport useDarkMode from \"use-dark-mode\";\nimport Editor from \"@monaco-editor/react\";\nimport { MethodObject } from \"@open-rpc/meta-schema\";\n\ninterface IProps {\n  url?: string;\n  request?: any;\n  darkMode?: boolean;\n  hideToggleTheme?: boolean;\n  openrpcMethodObject?: MethodObject;\n  onToggleDarkMode?: () => void;\n}\n\nconst useClient = (url: string): [Client, JSONRPCError | undefined, Dispatch<JSONRPCError | undefined>] => {\n  const [client, setClient] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    let transport;\n    if (url.includes(\"http://\") || url.includes(\"https://\")) {\n      transport = HTTPTransport;\n    }\n    if (url.includes(\"ws://\")) {\n      transport = WebSocketTransport;\n    }\n    try {\n      const clientTransport = transport || HTTPTransport;\n      const t = new clientTransport(url);\n      const c = new Client(new RequestManager([t]));\n      setClient(c);\n      c.onError((e) => {\n        console.log(\"onError\", e); //tslint:disable-line\n        setError(e);\n      });\n    } catch (e) {\n      setError(e);\n    }\n  }, [url]);\n  return [client, error, setError];\n};\n\nfunction useCounter(defaultValue: number): [number, () => void] {\n  const [counter, setCounter] = useState(defaultValue);\n\n  const incrementCounter = () => {\n    setCounter(counter + 1);\n  };\n\n  return [counter, incrementCounter];\n}\n\nconst Inspector: React.FC<IProps> = (props) => {\n  const darkMode = useDarkMode();\n  const [id, incrementId] = useCounter(0);\n  const [json, setJson] = useState(props.request || {\n    jsonrpc: \"2.0\",\n    method: \"\",\n    params: [],\n    id,\n  });\n  const editorRef = useRef();\n  const [results, setResults] = useState();\n  const [url, setUrl] = useState(props.url || \"\");\n  const [client, error, setError] = useClient(url);\n  useEffect(() => {\n    if (props.openrpcMethodObject) {\n      setJson({\n        jsonrpc: \"2.0\",\n        method: props.openrpcMethodObject.name,\n        params: json.params,\n        id,\n      });\n    }\n  }, [props.openrpcMethodObject, json, setJson, id]);\n\n  useEffect(() => {\n    if (props.url) {\n      setUrl(props.url);\n    }\n  }, [props.url]);\n\n  const handlePlayButton = async () => {\n    clear();\n    if (client) {\n      incrementId();\n      try {\n        const result = await client.request(json.method, json.params);\n        setResults({ jsonrpc: \"2.0\", result });\n      } catch (e) {\n        setError(e);\n      }\n    }\n  };\n  function handleResponseEditorDidMount(_: any, editor: any) {\n    editorRef.current = editor;\n  }\n\n  const clear = () => {\n    setResults(undefined);\n    setError(undefined);\n  };\n\n  const handleClearButton = () => {\n    clear();\n  };\n\n  const handleToggleDarkMode = () => {\n    if (props.onToggleDarkMode) {\n      props.onToggleDarkMode();\n    }\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <AppBar position=\"static\" elevation={0} color=\"default\">\n        <Toolbar>\n          <img\n            height=\"30\"\n            alt=\"openrpc-logo\"\n            style={{ marginRight: \"10px\" }}\n            src=\"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\" //tslint:disable-line\n          />\n          <Typography variant=\"h6\" color=\"textSecondary\">Inspector</Typography>\n          <IconButton onClick={handlePlayButton}>\n            <PlayCircle />\n          </IconButton>\n          <InputBase\n            value={url}\n            placeholder=\"Enter a JSON-RPC server URL\"\n            onChange={\n              (event: ChangeEvent<HTMLInputElement>) => setUrl(event.target.value)\n            }\n            fullWidth\n            style={{ background: \"rgba(0,0,0,0.1)\", borderRadius: \"4px\", padding: \"0px 10px\", marginRight: \"5px\" }}\n          />\n          {\n            props.hideToggleTheme\n              ? null\n              : <IconButton onClick={handleToggleDarkMode}>\n                {props.darkMode ? <Brightness3Icon /> : <WbSunnyIcon />}\n              </IconButton>\n          }\n        </Toolbar>\n      </AppBar>\n      <div style={{ display: \"flex\", marginBottom: \"-80px\" }}>\n        <SplitPane\n          split=\"vertical\"\n          minSize={100}\n          maxSize={-100}\n          defaultSize={\"50%\"}\n          style={{ flexGrow: 1 }}\n          onChange={() => {\n            if (editorRef && editorRef.current) {\n              (editorRef.current as any).layout();\n            }\n          }}>\n          <div style={{ width: \"99%\", padding: \"10px\" }}>\n            <JSONRPCRequest\n              onChange={(val) => setJson(JSON.parse(val))}\n              openrpcMethodObject={props.openrpcMethodObject}\n              value={JSON.stringify(json, null, 4)}\n            />\n          </div>\n          <div style={{ height: \"100%\", padding: \"10px\", overflowY: \"auto\", paddingBottom: \"80px\" }}>\n            {(results || error) &&\n              <Button\n                style={{ position: \"absolute\", top: \"15px\", right: \"15px\", zIndex: 1 }}\n                onClick={handleClearButton}>\n                Clear\n                </Button>\n            }\n            <Editor\n              options={{\n                minimap: {\n                  enabled: false,\n                },\n                wordWrap: \"on\",\n                lineNumbers: \"off\",\n                wrappingIndent: \"deepIndent\",\n                readOnly: true,\n                showFoldingControls: \"always\",\n              }}\n              editorDidMount={handleResponseEditorDidMount}\n              theme={darkMode.value ? \"dark\" : \"light\"}\n              language=\"json\"\n              value={JSON.stringify(error || results, null, 4) || \"\"}\n            />\n          </div>\n        </SplitPane >\n      </div>\n    </div>\n  );\n};\n\nexport default Inspector;\n","import { useState } from \"react\";\nimport * as qs from \"qs\";\n\nconst useQueryParams = (depth?: number) => {\n  const parse = () => {\n    return qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n      depth: depth || 100,\n      decoder(str) {\n        if (str === \"false\") {\n          return false;\n        }\n        if (str === \"true\") {\n          return true;\n        }\n        return decodeURIComponent(str);\n      },\n    });\n  };\n  const [query] = useState(parse());\n  return [query];\n};\n\nexport default useQueryParams;\n","import React from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { lightTheme, darkTheme } from \"../themes/openrpcTheme\";\nimport useDarkMode from \"use-dark-mode\";\nimport Inspector from \"./Inspector\";\nimport useQueryParams from \"../hooks/useQueryParams\";\n\nconst App: React.FC = () => {\n  const darkMode = useDarkMode();\n  const [query] = useQueryParams();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Inspector\n        onToggleDarkMode={darkMode.toggle}\n        darkMode={darkMode.value}\n        url={query.url}\n        openrpcMethodObject={query.openrpcMethodObject}\n        request={query.request}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./containers/App\";\nimport \"./App.css\";\nimport \"./splitpane.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}