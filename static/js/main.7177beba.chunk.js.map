{"version":3,"sources":["themes/openrpcTheme.ts","containers/JSONRPCRequestEditor.tsx","containers/Inspector.tsx","hooks/useQueryParams.ts","containers/App.tsx","helpers/localStorageMock.ts","index.tsx"],"names":["lightTheme","createMuiTheme","props","MuiAppBar","position","MuiCard","elevation","overrides","root","background","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","JSONRPCRequestEditor","editorRef","useRef","windowSize","useWindowSize","useEffect","undefined","current","layout","height","value","editorDidMount","_","editor","modelName","openrpcMethodObject","name","modelUriString","Math","random","modelUri","monaco","parse","model","createModel","setModel","schema","properties","jsonrpc","enum","id","oneOf","method","params","additionalProperties","items","map","param","addDiagnostics","toString","language","onChange","ev","errorToJSON","error","code","message","data","Inspector","defaultValue","useState","counter","setCounter","useCounter","incrementId","request","json","setJson","results","setResults","url","setUrl","client","setClient","setError","transport","includes","HTTPTransport","WebSocketTransport","t","c","Client","RequestManager","onError","e","console","log","useClient","clear","AppBar","Toolbar","alt","style","marginRight","src","Typography","variant","IconButton","onClick","a","async","result","InputBase","placeholder","event","target","fullWidth","borderRadius","padding","hideToggleTheme","onToggleDarkMode","darkMode","split","minSize","maxSize","defaultSize","flexGrow","val","JSON","stringify","Button","top","right","zIndex","options","minimap","enabled","wordWrap","lineNumbers","wrappingIndent","readOnly","showFoldingControls","useQueryParams","depth","qs","window","location","search","ignoreQueryPrefix","decoder","str","test","parseFloat","decodeURIComponent","localStorageEnabled","localStorage","setItem","darkModeOptions","storageProvider","length","getItem","key","removeItem","App","useDarkMode","query","theme","setTheme","CssBaseline","toggle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7177beba.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[800],\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import React, { useRef, useEffect } from \"react\";\nimport MonacoEditor from \"@etclabscore/react-monaco-editor\";\nimport * as monaco from \"monaco-editor\";\nimport { MethodObject } from \"@open-rpc/meta-schema\";\nimport useWindowSize from \"@rehooks/window-size\";\nimport { addDiagnostics } from \"@etclabscore/monaco-add-json-schema-diagnostics\";\n\ninterface IProps {\n  onChange?: (newValue: any) => void;\n  openrpcMethodObject?: MethodObject;\n  value: any;\n}\n\nconst JSONRPCRequestEditor: React.FC<IProps> = (props) => {\n  const editorRef = useRef();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (editorRef !== undefined && editorRef.current !== undefined) {\n      (editorRef.current as any).layout();\n    }\n  }, [windowSize]);\n\n  function handleEditorDidMount(_: any, editor: any) {\n    editorRef.current = editor;\n    const modelName = props.openrpcMethodObject ? props.openrpcMethodObject.name : \"inspector\";\n    const modelUriString = `inmemory://${modelName}-${Math.random()}.json`;\n    const modelUri = monaco.Uri.parse(modelUriString);\n    const model = monaco.editor.createModel(props.value || \"\", \"json\", modelUri);\n    editor.setModel(model);\n    let schema: any = {\n      type: \"object\",\n      properties: {\n        jsonrpc: {\n          type: \"string\",\n          enum: [\"2.0\"],\n        },\n        id: {\n          oneOf: [\n            {\n              type: \"string\",\n            },\n            {\n              type: \"number\",\n            },\n          ],\n        },\n        method: {\n          type: \"string\",\n        },\n        params: {\n          type: \"array\",\n        },\n      },\n    };\n    if (props.openrpcMethodObject) {\n      schema = {\n        ...schema,\n        additionalProperties: false,\n        properties: {\n          ...schema.properties,\n          method: {\n            type: \"string\",\n            enum: [props.openrpcMethodObject.name],\n          },\n          params: {\n            ...schema.properties.params,\n            items: props.openrpcMethodObject.params.map((param: any) => {\n              return {\n                ...param.schema,\n                additionalProperties: false,\n              };\n            }),\n          },\n        },\n      };\n    }\n    addDiagnostics(modelUri.toString(), schema, monaco);\n  }\n\n  const handleChange = (ev: any, value: any) => {\n    if (props.onChange) {\n      props.onChange(value);\n    }\n  };\n\n  return (\n    <MonacoEditor\n      height=\"93vh\"\n      value={props.value}\n      editorDidMount={handleEditorDidMount}\n      language=\"json\"\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default JSONRPCRequestEditor;\n","import React, { useState, useEffect, ChangeEvent, Dispatch, useRef } from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport JSONRPCRequestEditor from \"./JSONRPCRequestEditor\";\nimport PlayCircle from \"@material-ui/icons/PlayCircleFilled\";\nimport { IconButton, AppBar, Toolbar, Typography, Button, InputBase } from \"@material-ui/core\";\nimport { Client, RequestManager, HTTPTransport, WebSocketTransport } from \"@open-rpc/client-js\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\nimport { JSONRPCError } from \"@open-rpc/client-js/build/Error\";\nimport { MethodObject } from \"@open-rpc/meta-schema\";\nimport MonacoEditor from \"@etclabscore/react-monaco-editor\";\n\nconst errorToJSON = (error: JSONRPCError | undefined): any => {\n  if (!error) {\n    return;\n  }\n  return {\n    code: error.code,\n    message: error.message,\n    data: error.data,\n  };\n};\n\ninterface IProps {\n  url?: string;\n  request?: any;\n  darkMode?: boolean;\n  hideToggleTheme?: boolean;\n  openrpcMethodObject?: MethodObject;\n  onToggleDarkMode?: () => void;\n}\n\nconst useClient = (url: string): [Client, JSONRPCError | undefined, Dispatch<JSONRPCError | undefined>] => {\n  const [client, setClient] = useState();\n  const [error, setError] = useState();\n  useEffect(() => {\n    let transport;\n    if (url.includes(\"http://\") || url.includes(\"https://\")) {\n      transport = HTTPTransport;\n    }\n    if (url.includes(\"ws://\")) {\n      transport = WebSocketTransport;\n    }\n    try {\n      const clientTransport = transport || HTTPTransport;\n      const t = new clientTransport(url);\n      const c = new Client(new RequestManager([t]));\n      setClient(c);\n      c.onError((e) => {\n        console.log(\"onError\", e); //tslint:disable-line\n        setError(e);\n      });\n    } catch (e) {\n      setError(e);\n    }\n  }, [url]);\n  return [client, error, setError];\n};\n\nfunction useCounter(defaultValue: number): [number, () => void] {\n  const [counter, setCounter] = useState(defaultValue);\n\n  const incrementCounter = () => {\n    setCounter(counter + 1);\n  };\n\n  return [counter, incrementCounter];\n}\n\nconst Inspector: React.FC<IProps> = (props) => {\n  const [id, incrementId] = useCounter(0);\n  const [json, setJson] = useState(props.request || {\n    jsonrpc: \"2.0\",\n    method: \"\",\n    params: [],\n    id,\n  });\n  const editorRef = useRef();\n  const [results, setResults] = useState();\n  const [url, setUrl] = useState(props.url || \"\");\n  const [client, error, setError] = useClient(url);\n  useEffect(() => {\n    if (props.openrpcMethodObject) {\n      setJson({\n        jsonrpc: \"2.0\",\n        method: props.openrpcMethodObject.name,\n        params: json.params,\n        id: id.toString(),\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (json) {\n      setJson({\n        ...json,\n        jsonrpc: \"2.0\",\n        id: id.toString(),\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  useEffect(() => {\n    if (props.url) {\n      setUrl(props.url);\n    }\n  }, [props.url]);\n\n  const handlePlayButton = async () => {\n    clear();\n    if (client) {\n      incrementId();\n      try {\n        const result = await client.request(json.method, json.params);\n        setResults({ jsonrpc: \"2.0\", result, id });\n      } catch (e) {\n        setError(e);\n      }\n    }\n  };\n  function handleResponseEditorDidMount(_: any, editor: any) {\n    editorRef.current = editor;\n  }\n\n  const clear = () => {\n    setResults(undefined);\n    setError(undefined);\n  };\n\n  const handleClearButton = () => {\n    clear();\n  };\n\n  const handleToggleDarkMode = () => {\n    if (props.onToggleDarkMode) {\n      props.onToggleDarkMode();\n    }\n  };\n\n  return (\n    <>\n      <AppBar elevation={0} position=\"static\">\n        <Toolbar>\n          <img\n            height=\"30\"\n            alt=\"openrpc-logo\"\n            style={{ marginRight: \"10px\" }}\n            src=\"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\" //tslint:disable-line\n          />\n          <Typography variant=\"h6\" color=\"textSecondary\">Inspector</Typography>\n          <IconButton onClick={handlePlayButton}>\n            <PlayCircle />\n          </IconButton>\n          <InputBase\n            value={url}\n            placeholder=\"Enter a JSON-RPC server URL\"\n            onChange={\n              (event: ChangeEvent<HTMLInputElement>) => setUrl(event.target.value)\n            }\n            fullWidth\n            style={{ background: \"rgba(0,0,0,0.1)\", borderRadius: \"4px\", padding: \"0px 10px\", marginRight: \"5px\" }}\n          />\n          {\n            props.hideToggleTheme\n              ? null\n              : <IconButton onClick={handleToggleDarkMode}>\n                {props.darkMode ? <Brightness3Icon /> : <WbSunnyIcon />}\n              </IconButton>\n          }\n        </Toolbar>\n      </AppBar>\n      <SplitPane\n        split=\"vertical\"\n        minSize={100}\n        maxSize={-100}\n        defaultSize={\"50%\"}\n        style={{ flexGrow: 1 }}\n        onChange={() => {\n          if (editorRef && editorRef.current) {\n            (editorRef.current as any).layout();\n          }\n        }}>\n        <JSONRPCRequestEditor\n          onChange={(val) => {\n            setJson(JSON.parse(val));\n          }}\n          openrpcMethodObject={props.openrpcMethodObject}\n          value={JSON.stringify(json, null, 4)}\n        />\n        <>\n          {(results || error) &&\n            <Button\n              style={{ position: \"absolute\", top: \"15px\", right: \"15px\", zIndex: 1 }}\n              onClick={handleClearButton}>\n              Clear\n                </Button>\n          }\n          <MonacoEditor\n            options={{\n              minimap: {\n                enabled: false,\n              },\n              wordWrap: \"on\",\n              lineNumbers: \"off\",\n              wrappingIndent: \"deepIndent\",\n              readOnly: true,\n              showFoldingControls: \"always\",\n            }}\n            height=\"93vh\"\n            editorDidMount={handleResponseEditorDidMount}\n            language=\"json\"\n            value={JSON.stringify(errorToJSON(error) || results, null, 4) || \"\"}\n          />\n        </>\n      </SplitPane>\n    </>\n  );\n};\n\nexport default Inspector;\n","import { useState } from \"react\";\nimport * as qs from \"qs\";\n\nconst useQueryParams = (depth?: number) => {\n  const parse = () => {\n    return qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n      depth: depth || 100,\n      decoder(str) {\n        if (/^(\\d+|\\d*\\.\\d+)$/.test(str)) {\n          return parseFloat(str);\n      }\n        if (str === \"false\") {\n          return false;\n        }\n        if (str === \"true\") {\n          return true;\n        }\n        return decodeURIComponent(str);\n      },\n    });\n  };\n  const [query] = useState(parse());\n  return [query];\n};\n\nexport default useQueryParams;\n","import React, { useEffect } from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { lightTheme, darkTheme } from \"../themes/openrpcTheme\";\nimport useDarkMode from \"use-dark-mode\";\nimport Inspector from \"./Inspector\";\nimport useQueryParams from \"../hooks/useQueryParams\";\nimport * as monaco from \"monaco-editor\";\nimport localStorageMock from \"../helpers/localStorageMock\";\n\nlet localStorageEnabled = true;\ntry {\n  window.localStorage.setItem(\"xyz-test\", \"true\");\n} catch (e) {\n  localStorageEnabled = false;\n  console.error(e);\n}\n\n// mock storageProvider for when localStorage is not available via chrome/brave settings\nconst darkModeOptions = localStorageEnabled ? undefined : localStorageMock;\n\nconst App: React.FC = () => {\n  const darkMode = useDarkMode(undefined, darkModeOptions);\n  const [query] = useQueryParams();\n  const theme = darkMode.value ? darkTheme : lightTheme;\n  useEffect(() => {\n    const t = darkMode.value ? \"vs-dark\" : \"vs\";\n    monaco.editor.setTheme(t);\n  }, [darkMode.value]);\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Inspector\n        onToggleDarkMode={darkMode.toggle}\n        darkMode={darkMode.value}\n        url={query.url}\n        openrpcMethodObject={query.openrpcMethodObject}\n        request={query.request}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","export default {\n  storageProvider: {\n    localStorage: {\n      length: 0,\n      clear() {\n        //\n      },\n      getItem() {\n        return \"\";\n      },\n      key() {\n        return \"\";\n      },\n      removeItem() {\n        //\n      },\n      setItem() {\n        //\n      },\n    },\n  },\n}\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./containers/App\";\nimport \"./App.css\";\nimport \"./splitpane.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}