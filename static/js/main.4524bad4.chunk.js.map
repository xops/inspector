{"version":3,"sources":["themes/openrpcTheme.ts","containers/JSONRPCRequest.tsx","containers/Inspector.tsx","containers/App.tsx","index.tsx"],"names":["lightTheme","createMuiTheme","props","MuiAppBar","position","MuiCard","elevation","overrides","root","background","palette","default","darkTheme","type","grey","paper","MuiTable","MuiTypography","color","JSONRPCRequest","_useState","useState","collapseStringsAfterLength","displayDataTypes","displayObjectSize","indentWidth","name","reactJsonOptions","Object","slicedToArray","handleChange","changed","onChange","updated_src","react_default","a","createElement","Fragment","main_default","assign","theme","reactJsonTheme","src","json","onEdit","onAdd","onDelete","Inspector","darkMode","useDarkMode","value","_useCounter","defaultValue","_useState3","_useState4","counter","setCounter","useCounter","_useCounter2","id","incrementId","_useState5","request","jsonrpc","method","params","_useState6","setJson","_useState7","_useState8","results","setResults","_useState9","url","_useState10","setUrl","_useClient","_useState2","client","setClient","useEffect","transport","includes","HTTPTransport","WebSocketTransport","console","error","concat","t","c","Client","RequestManager","e","useClient","handlePlayButton","_ref","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","sent","t0","stop","apply","this","arguments","style","height","AppBar","Toolbar","alt","marginRight","Typography","variant","IconButton","onClick","PlayCircleFilled_default","InputBase","placeholder","event","target","fullWidth","borderRadius","padding","hideToggleTheme","toggle","Brightness3_default","WbSunny_default","display","marginBottom","index_esm","split","minSize","maxSize","defaultSize","flexGrow","width","containers_JSONRPCRequest","objectSpread","toString","overflowY","paddingBottom","Button","top","right","zIndex","undefined","App","MuiThemeProvider","CssBaseline","containers_Inspector","ReactDOM","render","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.4524bad4.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\n\nexport const lightTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"#fff !important\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport const darkTheme = createMuiTheme({\n  props: {\n    MuiAppBar: {\n      position: \"sticky\",\n    },\n    MuiCard: {\n      elevation: 0,\n    },\n  },\n  palette: {\n    type: \"dark\",\n    background: {\n      default: grey[900],\n      paper: grey[800],\n    },\n  },\n  overrides: {\n    MuiAppBar: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTable: {\n      root: {\n        background: \"transparent !important\",\n      },\n    },\n    MuiTypography: {\n      root: {\n        color: grey[400],\n      },\n    },\n  },\n});\n\nexport default {\n  darkTheme,\n  lightTheme,\n};\n","import React, { useState } from \"react\";\nimport ReactJson from \"react-json-view\";\n\ninterface IProps {\n  json?: any;\n  reactJsonTheme: string;\n  onChange?: (newValue: any) => void;\n}\n\nconst JSONRPCRequest: React.FC<IProps> = (props) => {\n  const [reactJsonOptions] = useState({\n    collapseStringsAfterLength: 25,\n    displayDataTypes: false,\n    displayObjectSize: false,\n    indentWidth: 2,\n    name: false,\n  });\n\n  const handleChange = (changed: any) => {\n    if (props.onChange) {\n      props.onChange(changed.updated_src);\n    }\n  };\n\n  return (\n    <>\n      <ReactJson\n        theme={props.reactJsonTheme}\n        src={props.json}\n        {...reactJsonOptions as any}\n        onEdit={handleChange}\n        onAdd={handleChange}\n        onDelete={handleChange}\n      />\n    </>\n  );\n};\n\nexport default JSONRPCRequest;\n","import React, { useState, useEffect, ChangeEvent } from \"react\";\nimport SplitPane from \"react-split-pane\";\nimport JSONRPCRequest from \"./JSONRPCRequest\";\nimport PlayCircle from \"@material-ui/icons/PlayCircleFilled\";\nimport { IconButton, AppBar, Toolbar, Typography, Button, InputBase } from \"@material-ui/core\";\nimport { Client, RequestManager, HTTPTransport, WebSocketTransport } from \"@open-rpc/client-js\";\nimport ReactJson from \"react-json-view\";\nimport useDarkMode from \"use-dark-mode\";\nimport Brightness3Icon from \"@material-ui/icons/Brightness3\";\nimport WbSunnyIcon from \"@material-ui/icons/WbSunny\";\n\ninterface IProps {\n  url?: string;\n  request?: any;\n  darkMode?: boolean;\n  hideToggleTheme?: boolean;\n}\n\nconst useClient = (url: string): [Client] => {\n  const [client, setClient] = useState();\n  useEffect(() => {\n    let transport;\n    if (url.includes(\"http://\") || url.includes(\"https://\")) {\n      transport = HTTPTransport;\n    }\n    if (url.includes(\"ws://\")) {\n      transport = WebSocketTransport;\n    }\n    if (!transport) {\n      return console.error(`No Transport Found for url: ${url}`);\n    }\n    try {\n      const t = new transport(url);\n      const c = new Client(new RequestManager([t]));\n      setClient(c);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [url]);\n  return [client];\n}\n\nfunction useCounter(defaultValue: number): [number, () => void] {\n  const [counter, setCounter] = useState(defaultValue);\n\n  const incrementCounter = () => {\n    setCounter(counter + 1);\n  };\n\n  return [counter, incrementCounter];\n}\n\nconst Inspector: React.FC<IProps> = (props) => {\n  const darkMode = useDarkMode(props.darkMode);\n  const reactJsonTheme = darkMode.value ? \"summerfruit\" : \"summerfruit:inverted\";\n\n  const [id, incrementId] = useCounter(0);\n  const [json, setJson] = useState(props.request || {\n    jsonrpc: \"2.0\",\n    method: \"\",\n    params: [],\n    id,\n  });\n  const [results, setResults] = useState();\n  const [url, setUrl] = useState(props.url || \"\");\n  const [client] = useClient(url);\n\n  const handlePlayButton = async () => {\n    if (client) {\n      incrementId();\n      try {\n        const result = await client.request(json.method, json.params);\n        setResults({ jsonrpc: \"2.0\", result });\n      } catch (e) {\n        setResults(e);\n      }\n    }\n  };\n\n  const handleClearButton = () => {\n    setResults(undefined);\n  };\n\n  return (\n    <div style={{ height: \"100%\" }}>\n      <AppBar position=\"static\" elevation={0}>\n        <Toolbar>\n          <img\n            height=\"30\"\n            alt=\"openrpc-logo\"\n            style={{ marginRight: \"10px\" }}\n            src=\"https://github.com/open-rpc/design/raw/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/128x128.png\" //tslint:disable-line\n          />\n          <Typography variant=\"h6\" color=\"textSecondary\">Inspector</Typography>\n          <IconButton onClick={handlePlayButton}>\n            <PlayCircle />\n          </IconButton>\n          <InputBase\n            value={url}\n            placeholder=\"Enter a JSON-RPC server URL\"\n            onChange={\n              (event: ChangeEvent<HTMLInputElement>) => setUrl(event.target.value)\n            }\n            fullWidth\n            style={{ background: \"rgba(0,0,0,0.1)\", borderRadius: \"4px\", padding: \"0px 10px\", marginRight: \"5px\" }}\n          />\n          {\n            props.hideToggleTheme\n              ? null\n              : <IconButton onClick={darkMode.toggle}>\n                {darkMode.value ? <Brightness3Icon /> : <WbSunnyIcon />}\n              </IconButton>\n          }\n        </Toolbar>\n      </AppBar>\n      <div style={{ display: \"flex\", marginBottom: \"-80px\" }}>\n        <SplitPane split=\"vertical\" minSize={100} maxSize={-100} defaultSize={\"35%\"} style={{ flexGrow: 1 }}>\n          <div style={{ width: \"99%\", padding: \"10px\" }}>\n            <JSONRPCRequest\n              json={{ ...json, id: id.toString() }}\n              onChange={setJson}\n              reactJsonTheme={reactJsonTheme}\n            />\n          </div>\n          <div style={{ height: \"100%\", padding: \"10px\", overflowY: \"auto\", paddingBottom: \"80px\" }}>\n            {results &&\n              <Button\n                style={{ position: \"absolute\", top: \"15px\", right: \"15px\", zIndex: 1 }}\n                onClick={handleClearButton}>\n                Clear\n                </Button>\n            }\n            {results &&\n              <ReactJson\n                src={results ? { ...results, id: (id - 1).toString() } : null}\n                name={false}\n                displayDataTypes={false}\n                displayObjectSize={false}\n                theme={reactJsonTheme}\n              />}\n          </div>\n        </SplitPane >\n      </div>\n    </div>\n  );\n};\n\nexport default Inspector;\n","import React from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { lightTheme, darkTheme } from \"../themes/openrpcTheme\";\nimport useDarkMode from \"use-dark-mode\";\nimport Inspector from \"./Inspector\";\n\ninterface IProps {\n  url?: string;\n  request?: any;\n  darkMode?: boolean;\n  hideToggleTheme?: boolean;\n}\n\nconst App: React.FC<IProps> = (props) => {\n  const darkMode = useDarkMode(props.darkMode);\n  const theme = darkMode.value ? darkTheme : lightTheme;\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Inspector />\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./containers/App\";\nimport \"./App.css\";\nimport \"./splitpane.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}